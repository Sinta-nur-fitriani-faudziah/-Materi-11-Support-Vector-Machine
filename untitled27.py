# -*- coding: utf-8 -*-
"""Untitled27.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ReoeAjpvzcyabdQ9wQaKHi8bOsNRxEAH
"""

def Trapezoid(a, b, f):
  '''
  Fungsi untuk mencari Integral Trapezoid dengan mengganti nilai
  a = batas atas
  dan
  b batas bawah,
  serta f = yang akan diintegralkan
  '''
  n = 100

  def trapezoid(f, a, b, n=100):  # Pass a, b, and n to the inner function
    h = (b - a) / n
    sum = 0.0
    for i in range(1, n):
      x = a + i * h
      sum = sum + f(x)
    integral = (h / 2) * (f(a) + 2 * sum + f(b))  # Rumus Trapezoid
    return integral

  integral = trapezoid(f, a, b, n)  # Pass a, b, and n when calling the inner function
  print(a, ",", b, ",", round(integral, 2))

# Melakukan looping untuk membuat database dari beberapa soal integral for i in range(0,5):
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 2 * x)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x:  2 * x + 2)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 2 * x + 4)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 4 * x + 6)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 6 * x + 8)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 8 * x + 10)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 10 * x + 12)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 12 * x + 14)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 14 * x + 12)
for i in range(0, 5):
  Trapezoid(i + 1, i + 2, lambda x: 20 * x +40)

# Import library yang diperlukan
import numpy as np
import pandas as pd
from sklearn import svm
from google.colab import drive
import matplotlib.pyplot as plt
# Mount Google Drive
drive.mount('/content/drive')
# Path ke file Database.txt di Google Drive
file_path='/content/drive/My Drive/SOAL11/soal 11.txt' # Ganti dengan path sesuai lokasi file Anda di Google Drive
# Membaca data dari file
Database = pd.read_csv(file_path, sep=",", header=0)
# x Data, y = Target
X = Database[['a', 'b']] # Pastikan kolom sesuai dengan nama yang ada di file
y = Database['Target']

# Membuat dan melatih model SVM
clf = svm.SVC()
clf.fit(X.values, y)
# Melakukan prediksi
y_pred = clf.predict(X.values)

#Menampilkan hasil prediksi
print("Hasil prediksi:")
for i, pred in enumerate(y_pred):
  print(f"{X.iloc[i, 0]}, {X.iloc[1, 1]}, {pred}")
# Membuat plot perbandingan nilai asli dengan nilai prediksi
plt.figure(figsize=(10, 6))
plt.plot(range(len(y)), y, 'o-', label='Nilai Asli (Target)', color='blue')
plt.plot(range(len(y_pred)), y_pred, 'x--', label='Nilai Prediksi (SVM)', color="yellow")
# Menambahkan label dan judul
plt.xlabel('Indeks Data')
plt.ylabel('Nilai')
plt.legend()
plt.title('Perbandingan Nilai Asli vs Nilai Prediksi Menggunakan SVM')
plt.grid()

def Trapezoid(a, b, f):
  '''
  Fungsi untuk mencari Integral Trapezoid dengan mengganti nilai
  a = batas atas
  dan
  b batas bawah,
  serta f = yang akan diintegralkan
  '''
  n = 100

  def trapezoid(f, a, b, n=100):  # Pass a, b, and n to the inner function
    h = (b - a) / n
    sum = 0.0
    for i in range(1, n):
      x = a + i * h
      sum = sum + f(x)
    integral = (h / 2) * (f(a) + 2 * sum + f(b))  # Rumus Trapezoid
    return integral

  integral = trapezoid(f, a, b, n)  # Pass a, b, and n when calling the inner function
  print(a, ",", b, ",", round(integral, 2))

# Melakukan looping untuk membuat database dari beberapa soal integral for i in range(0,5):
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 2 * x)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x:  2 * x + 2)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 2 * x + 4)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 4 * x + 6)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 6 * x + 8)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 8 * x + 10)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 10 * x + 12)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 12 * x + 14)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 14 * x + 12)
for i in range(0, 5):
  Trapezoid(i+2, i+4, lambda x: 20 * x +40)

# Import library yang diperlukan
import numpy as np
import pandas as pd
from sklearn import svm
from google.colab import drive
import matplotlib.pyplot as plt
# Mount Google Drive
drive.mount('/content/drive')
# Path ke file Database.txt di Google Drive
file_path='/content/drive/My Drive/soal3.txt' # Ganti dengan path sesuai lokasi file Anda di Google Drive
# Membaca data dari file
Database = pd.read_csv(file_path, sep=",", header=0)
# x Data, y = Target
X = Database[['a', 'b']] # Pastikan kolom sesuai dengan nama yang ada di file
y = Database['Target']

# Membuat dan melatih model SVM
clf = svm.SVC()
clf.fit(X.values, y)
# Melakukan prediksi
y_pred = clf.predict(X.values)

#Menampilkan hasil prediksi
print("Hasil prediksi:")
for i, pred in enumerate(y_pred):
  print(f"{X.iloc[i, 0]}, {X.iloc[1, 1]}, {pred}")
# Membuat plot perbandingan nilai asli dengan nilai prediksi
plt.figure(figsize=(10, 6))
plt.plot(range(len(y)), y, 'o-', label='Nilai Asli (Target)', color='blue')
plt.plot(range(len(y_pred)), y_pred, 'x--', label='Nilai Prediksi (SVM)', color="yellow")
# Menambahkan label dan judul
plt.xlabel('Indeks Data')
plt.ylabel('Nilai')
plt.legend()
plt.title('Perbandingan Nilai Asli vs Nilai Prediksi Menggunakan SVM')
plt.grid()

